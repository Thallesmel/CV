{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thasm\\\\OneDrive\\\\Desktop\\\\projs\\\\react-cvv\\\\React.cv\\\\src\\\\components\\\\CandyCrush\\\\CandyCrush.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport './CandyCrush.css';\nimport { themeContext } from '../../context';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst candyColors = ['blue', 'green', 'orange', 'purple', 'red', 'yellow'];\nconst width = 8;\n\nconst Candycrush = () => {\n  _s();\n\n  const theme = useContext(themeContext);\n  const darkMode = theme.state.darkMode;\n\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i < 39; i++) {\n      const columnOfFour = [i, i + width, i + width * 2, i + width * 3];\n      const decidedColor = currentColorArrangement[i];\n\n      if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor)) {\n        columnOfThree.forEach(square => currentColorArrangement[square] = '');\n      }\n    }\n  };\n\n  const [currentColorArrangement, setColorArrangement] = useState([]);\n\n  const createBoard = () => {\n    const randomColorArrangement = [];\n\n    for (let i = 0; i < width * width; i++) {\n      const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)];\n      randomColorArrangement.push(randomColor);\n    }\n\n    setColorArrangement(randomColorArrangement);\n  };\n\n  useEffect(() => {\n    createBoard();\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForColumnOfThree();\n      setColorArrangement([...currentColorArrangement]);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [checkForColumnOfThree, currentColorArrangement]);\n  console.log(currentColorArrangement);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"candycrush\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"play\",\n      className: \"button play\",\n      children: \"Play it now!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: currentColorArrangement.map((candyColors, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          backgroundColor: candyColors\n        },\n        alt: candyColors\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Candycrush, \"fIVgbI1ATaZk7JUcmFF/VcVjIfc=\");\n\n_c = Candycrush;\nexport default Candycrush;\n\nvar _c;\n\n$RefreshReg$(_c, \"Candycrush\");","map":{"version":3,"sources":["C:/Users/thasm/OneDrive/Desktop/projs/react-cvv/React.cv/src/components/CandyCrush/CandyCrush.jsx"],"names":["React","useEffect","useState","themeContext","useContext","candyColors","width","Candycrush","theme","darkMode","state","checkForColumnOfFour","i","columnOfFour","decidedColor","currentColorArrangement","columnOfThree","every","square","forEach","setColorArrangement","createBoard","randomColorArrangement","randomColor","Math","floor","random","length","push","timer","setInterval","checkForColumnOfThree","clearInterval","console","log","map","index","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './CandyCrush.css';\r\nimport { themeContext } from '../../context';\r\nimport { useContext } from 'react';\r\n\r\nconst candyColors = ['blue', 'green', 'orange', 'purple', 'red', 'yellow'];\r\nconst width = 8;\r\n\r\nconst Candycrush = () => {\r\n  const theme = useContext(themeContext);\r\n  const darkMode = theme.state.darkMode;\r\n \r\n  const checkForColumnOfFour = () => {\r\n    for (let i = 0; i < 39; i++) {\r\n      const columnOfFour = [i, i + width, i + width * 2, i + width * 3];\r\n      const decidedColor = currentColorArrangement[i];\r\n      if( columnOfThree.every(square => currentColorArrangement[square] === decidedColor)) {\r\n        columnOfThree.forEach(square => currentColorArrangement[square] = '');\r\n      }\r\n    }\r\n}\r\n\r\n\r\n  const [currentColorArrangement, setColorArrangement] = useState([]);\r\n\r\n  const createBoard = () => {\r\n    const randomColorArrangement = [];\r\n    for (let i = 0; i < width * width; i++) {\r\n      const randomColor =\r\n        candyColors[Math.floor(Math.random() * candyColors.length)];\r\n      randomColorArrangement.push(randomColor);\r\n    }\r\n    setColorArrangement(randomColorArrangement);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createBoard();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      checkForColumnOfThree();\r\n      setColorArrangement([...currentColorArrangement]);\r\n    }, 100);\r\n\r\n    return () => clearInterval(timer);\r\n\r\n  }, [checkForColumnOfThree, currentColorArrangement]);\r\n\r\n  console.log(currentColorArrangement);\r\n\r\n  return (\r\n    <div className='candycrush'>\r\n      <div id='play' className='button play'>\r\n        Play it now!!\r\n      </div>\r\n      <div className='game'>\r\n        {currentColorArrangement.map((candyColors, index) => (\r\n          <img key={index}\r\n           style={{ backgroundColor: candyColors }}\r\n           alt={candyColors} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Candycrush;\r\n"]},"metadata":{},"sourceType":"module"}