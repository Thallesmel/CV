{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thasm\\\\OneDrive\\\\Desktop\\\\projs\\\\react-cvv\\\\React.cv\\\\src\\\\components\\\\CriptoAPI\\\\CriptoAPI.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { themeContext } from '../../context';\nimport { useContext } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CriptoAPI = () => {\n  _s();\n\n  const theme = useContext(themeContext);\n  const darkMode = theme.state.darkMode;\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false').then(res => {\n      setCoins(res.data);\n      console.log(res.data);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"coin-text\",\n        children: \"Search a currency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"coin-input\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), filteredCoins.map(coin => {\n      return /*#__PURE__*/_jsxDEV(Coin, {\n        name: coin.name,\n        image: coin.image,\n        symbol: coin.symbol,\n        volume: coin.market_cap,\n        price: coin.current_price\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CriptoAPI, \"Owgdhio4ZpbTw+MpHR/y8Xoi/Dw=\");\n\n_c = CriptoAPI;\nexport default CriptoAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CriptoAPI\");","map":{"version":3,"sources":["C:/Users/thasm/OneDrive/Desktop/projs/react-cvv/React.cv/src/components/CriptoAPI/CriptoAPI.js"],"names":["React","themeContext","useContext","axios","useEffect","useState","CriptoAPI","theme","darkMode","state","coins","setCoins","search","setSearch","get","then","res","data","console","log","catch","error","handleChange","e","target","value","filteredCoins","filter","coin","name","toLowerCase","includes","map","image","symbol","market_cap","current_price","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGL,UAAU,CAACD,YAAD,CAAxB;AACA,QAAMO,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYD,QAA7B;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFW,GADH,CAEI,0HAFJ,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbL,MAAAA,QAAQ,CAACK,GAAG,CAACC,IAAL,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KAPH,EAQGG,KARH,CAQUC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CARpB;AASD,GAVQ,EAUN,EAVM,CAAT;;AAWA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBV,IAAAA,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGhB,KAAK,CAACiB,MAAN,CAAaC,IAAI,IACrCA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCnB,MAAM,CAACkB,WAAP,EAAjC,CADoB,CAAtB;AAGA,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,QAA/B;AAAwC,UAAA,SAAS,EAAC,YAAlD;AAA+D,UAAA,QAAQ,EAAER;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGI,aAAa,CAACM,GAAd,CAAkBJ,IAAI,IAAI;AACzB,0BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IAAI,CAACC,IADb;AAEE,QAAA,KAAK,EAAED,IAAI,CAACK,KAFd;AAGE,QAAA,MAAM,EAAEL,IAAI,CAACM,MAHf;AAIE,QAAA,MAAM,EAAEN,IAAI,CAACO,UAJf;AAKE,QAAA,KAAK,EAAEP,IAAI,CAACQ;AALd,SAAWR,IAAI,CAACS,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AASJ,KAVG,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAoBA,CA5CF;;GAAM/B,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { themeContext } from '../../context';\r\nimport { useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst CriptoAPI = () => {\r\n  const theme = useContext(themeContext);\r\n  const darkMode = theme.state.darkMode;\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'\r\n      )\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const handleChange = e => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const filteredCoins = coins.filter(coin =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n  return (\r\n  <div className='coin-app'>\r\n    <div className=\"coin-search\">\r\n        <h1 className=\"coin-text\">Search a currency</h1>\r\n        <form>\r\n            <input type=\"text\" placeholder='Search' className='coin-input' onChange={handleChange}/>\r\n        </form>\r\n    </div>\r\n    {filteredCoins.map(coin => {\r\n      return (\r\n        <Coin key={coin.id}\r\n          name={coin.name}\r\n          image={coin.image}\r\n          symbol={coin.symbol}\r\n          volume={coin.market_cap}\r\n          price={coin.current_price}\r\n          />\r\n      \r\n)})}\r\n  </div>\r\n)};\r\n\r\nexport default CriptoAPI;\r\n"]},"metadata":{},"sourceType":"module"}